pipeline {
    agent any

    tools {
        maven "M2_HOME" // Use the configured Maven tool and add it to the path
    }

    stages {
        stage('Build') {
            steps {
                // Clone the repository
                git 'https://github.com/rohinicbabu/star-agile-banking-finance.git'

                // Run Maven to build the project
                sh "mvn -Dmaven.test.failure.ignore=true clean package"
            }        
        }

        stage('Generate Test Reports') {
            steps {
                // Publish HTML reports
                publishHTML([
                    allowMissing: false, 
                    alwaysLinkToLastBuild: false, 
                    keepAll: false, 
                    reportDir: 'target/surefire-reports',
                    reportFiles: 'index.html', 
                    reportName: 'HTML Report'
                ])
            }
        }

        stage('Create Docker Image') {
            steps {
                // Build Docker image
                sh 'docker build -t faris7/banking-project-demo:1.0 .'
            }
        }

        stage('Docker Login') {
            steps {
                // Log into Docker Hub
                withCredentials([usernamePassword(credentialsId: 'Docker-login', passwordVariable: 'dockerpassword', usernameVariable: 'dockerlogin')]) { 
                    sh 'docker login -u ${dockerlogin} -p ${dockerpassword}'
                }
            }
        }

        stage('Push Image') {
            steps {
                // Retry Docker push to handle transient network issues
                retry(3) {
                    sh 'docker push faris7/banking-project-demo:1.0'
                }
            }
        }

        stage('Config & Deployment') {
            steps {
                withCredentials([
                    aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWS-ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'),
                    withCredentials([sshUserPrivateKey(credentialsId: 'terraform-ansible', keyFileVariable: 'terraform-pem-id', passphraseVariable: 'TERRAFORM_PEM', usernameVariable: 'TERRAFORM_PEM')])
                ]) {
                    dir('terraform-files') {
                        // Adjust permissions for the .pem file and run Terraform commands
                        sh 'chmod 600 terraform.pem'
                        sh 'terraform init'
                        sh 'terraform validate'
                        sh 'terraform apply --auto-approve'
                    }
                }
            }
        }
    }

    post {
        always {
            // Clean up Docker credentials after execution
            sh 'docker logout'
        }
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check logs for details.'
        }
    }
}
